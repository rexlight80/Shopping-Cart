{"version":3,"sources":["Components/CartItem.js","Components/BuyPage.js","Components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartItem","product","addInCart","Card","className","CardImg","top","height","width","src","smallImage","CardBody","CardTitle","productName","CardText","productPrice","Button","color","onClick","BuyPage","useState","setProduct","useEffect","fetchPhotos","a","axios","get","data","photos","allProducts","map","photo","medium","tinyImage","tiny","random","word","commerce","price","id","uuid","Container","fluid","Row","Col","md","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","singleItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb8069d2.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Button, CardBody,CardImg,CardText,CardTitle,Card} from \"reactstrap\"\r\n\r\n\r\nconst CartItem=({product,addInCart})=>{\r\nreturn(\r\n<Card className=\"mt-2 mb-1\">\r\n <CardImg \r\n top\r\n height=\"250\"\r\n width=\"100%\"\r\n src={product.smallImage}/>\r\n <CardBody className=\"text-center\">\r\n <CardTitle>{product.productName}</CardTitle>\r\n <CardText className=\"secondary\">\r\n       Price: Rs {product.productPrice}\r\n </CardText>\r\n <Button color=\"success\" onClick={()=>addInCart(product)}>Buy Now</Button>\r\n </CardBody>\r\n</Card>\r\n);\r\n};\r\n\r\nexport default CartItem","import React,{useState,useEffect} from \"react\"\r\nimport axios from \"axios\"\r\nimport {random,commerce} from \"faker\"\r\nimport {Container,Col,Row} from \"reactstrap\"\r\nimport CartItem from \"./CartItem\"\r\n\r\nconst apikey=\"INSERT YOUR KEY HERE\"\r\nconst url=\"https://api.pexels.com/v1/search?query=laptop&per_page=6&page=1\"\r\nconst loacalurl=\"http://shoppingcart.free.beeceptor.com/\"\r\n\r\n\r\nconst BuyPage=({addInCart})=>{\r\n    const [product,setProduct]=useState([])\r\n    // const fetchPhotos=async ()=>{\r\n    //   const response=await Axios.get(url,{\r\n    //       headers:{\r\n    //           Authorization:apikey\r\n    //       }\r\n          \r\n    //   })\r\n    // }\r\n   \r\n\r\n      useEffect(()=>{\r\n          fetchPhotos()\r\n      },[])\r\n\r\n      const fetchPhotos=async ()=>{\r\n        const {data}=await axios.get(loacalurl)\r\n      \r\n\r\n      const {photos}= data\r\n\r\n      const allProducts= photos.map(photo=>(\r\n          {\r\n              smallImage:photo.src.medium,\r\n              tinyImage:photo.src.tiny,\r\n              productName:random.word(),\r\n              productPrice:commerce.price(),\r\n              id:random.uuid()\r\n          }\r\n      ))\r\n\r\n      setProduct(allProducts)\r\n        }\r\n    return(\r\n        \r\n        <Container fluid>\r\n    <h1 className=\"text-center text-success\">Buy Page</h1>\r\n    <Row>\r\n    {product.map(product=>{\r\n       return( <Col key={product.id} md={4}>\r\n        <CartItem  product={product} addInCart={addInCart}/>\r\n        </Col>)\r\n        \r\n    })}\r\n    </Row>\r\n    </Container>)\r\n\r\n}\r\n\r\nexport default BuyPage;","import React from \"react\"\r\nimport {\r\n    Container,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Button,\r\n    CardHeader,\r\n    CardBody,\r\n    Card,\r\n    CardFooter,\r\n    Col,\r\n    Row\r\n\r\n} from \"reactstrap\"\r\n\r\nconst Cart=({cartItem,removeItem,buyNow})=>{\r\n    let amount = 0;\r\n    cartItem.forEach(function(item) {\r\n        amount= parseFloat(amount)+ parseFloat(item.productPrice);\r\n    });\r\n return(\r\n     <Container fluid>\r\n    <h1 className=\"text-success text-center \">Your cart</h1>\r\n    <ListGroup>\r\n    {cartItem.map(item =>{\r\n        return (<ListGroupItem key={item.id}>\r\n        <Row>\r\n        <Col>\r\n        <img height={80} src={item.tinyImage}/>\r\n        </Col>\r\n        <Col className=\"text-center\">\r\n        <div className=\"text-primary\">\r\n        {item.productName}\r\n        </div>\r\n        <span>Price: {item.productPrice}</span>\r\n        <Button color=\"danger\" onClick={()=>removeItem(item)}>Remove</Button>\r\n        \r\n        </Col>\r\n        </Row>\r\n        </ListGroupItem>)\r\n    })};\r\n    \r\n    </ListGroup>\r\n     {cartItem.length >=1 ? (<Card className=\"text-center mt-3\">\r\n        <CardHeader>\r\n        Grand Total\r\n        </CardHeader>\r\n        <CardBody>\r\n        Your amount for {cartItem.length} product is {amount}\r\n        </CardBody>\r\n        <CardFooter>\r\n        <Button color=\"success\" onClick={buyNow}>Pay here</Button>\r\n        </CardFooter>\r\n        </Card> ):(<h1 className=\"text-danger text-center\">Cart is Empty</h1>)}\r\n     </Container>\r\n     \r\n     \r\n );\r\n};\r\n\r\n\r\nexport default Cart;\r\n\r\n","import React,{useState}from \"react\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport './App.css';\nimport { toast,ToastContainer,} from \"react-toastify\";\nimport {Container,Col,Row} from \"reactstrap\"\n\nimport BuyPage from \"./Components/BuyPage\";\nimport Cart from \"./Components/Cart\";\n\nconst App=()=>{\n\n  const [cartItem,setCartItem] = useState([]);\n\n  const addInCart=(item)=>{\nconst isAlreadyAdded=cartItem.findIndex(function(array){\n  return array.id===item.id\n})\n  \n\n\n  if(isAlreadyAdded!==-1){\n    toast(\"already added in cart\",{\n      type:\"error\"\n    })\n    return;\n  }\n\n    setCartItem([...cartItem,item]);\n    \n\n  \n}\n\nconst buyNow=()=>{\n  setCartItem([]);\n\n  toast(\"Purshace Complete\",{\n    type:\"success\"\n  })\n\n}\n\nconst removeItem=(item)=>{\n  setCartItem(cartItem.filter(singleItem=>singleItem.id!==item.id));\n}\n  return (\n    <Container fluid>\n    <ToastContainer/>\n    <Row>\n    <Col md={8}>\n    <BuyPage addInCart={addInCart}/>\n    </Col>\n    <Col md={4}>\n    <Cart cartItem={cartItem} removeItem={removeItem} buyNow={buyNow}/>\n    </Col>\n    </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}